
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'CB512F5BA320A24F2126BF6C250DC7C7'
    
_lr_action_items = {'DO':([0,3,7,8,10,13,14,17,19,26,31,32,51,58,65,70,76,85,89,98,103,105,108,110,],[1,-10,-9,-7,1,-8,-6,1,-27,1,-26,-36,-5,-35,-11,-14,-12,-37,-13,-17,-16,-22,-21,-15,]),'*':([32,36,39,58,82,85,],[-36,-31,62,-35,-29,-37,]),'NUMBER':([37,],[58,]),'ASSERT':([0,3,7,8,10,13,14,17,19,26,31,32,51,58,65,70,76,85,89,98,103,105,108,110,],[5,-10,-9,-7,5,-8,-6,5,-27,5,-26,-36,-5,-35,-11,-14,-12,-37,-13,-17,-16,-22,-21,-15,]),'INSTR1':([0,3,7,8,10,13,14,17,19,26,31,32,51,58,65,70,76,85,89,98,103,105,108,110,],[6,-10,-9,-7,6,-8,-6,6,-27,6,-26,-36,-5,-35,-11,-14,-12,-37,-13,-17,-16,-22,-21,-15,]),'INSTR2':([0,3,7,8,10,13,14,17,19,26,31,32,51,58,65,70,76,85,89,98,103,105,108,110,],[15,-10,-9,-7,15,-8,-6,15,-27,15,-26,-36,-5,-35,-11,-14,-12,-37,-13,-17,-16,-22,-21,-15,]),'COND':([4,6,11,15,],[18,22,25,28,]),'BLIT':([20,29,38,46,55,59,66,67,107,],[35,35,35,35,35,35,35,35,35,]),'WHILE':([100,],[104,]),'#':([20,29,38,46,47,55,56,57,59,62,63,66,67,68,71,78,107,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'INSTR_SWP':([0,3,7,8,10,13,14,17,19,26,31,32,51,58,65,70,76,85,89,98,103,105,108,110,],[11,-10,-9,-7,11,-8,-6,11,-27,11,-26,-36,-5,-35,-11,-14,-12,-37,-13,-17,-16,-22,-21,-15,]),')':([32,33,34,35,36,39,40,42,43,44,54,58,60,61,69,79,80,81,82,83,84,85,86,87,88,95,109,],[-36,-33,-20,-43,-31,-25,-42,65,-38,-41,76,-35,81,82,-40,-18,-19,-44,-29,-23,-24,-37,-34,-39,-45,82,110,]),'(':([5,16,20,29,38,46,55,56,57,59,62,63,66,67,68,78,104,107,],[20,29,38,38,59,38,38,78,78,59,78,78,38,38,78,78,107,38,]),'+':([32,34,36,39,58,82,83,84,85,],[-36,56,-31,-25,-35,-29,-23,-24,-37,]),'REGISTER':([6,11,15,20,22,25,28,29,38,46,47,49,55,56,57,59,62,63,66,67,68,71,73,78,107,],[21,24,27,32,48,50,53,32,32,32,32,72,32,32,32,32,32,32,32,32,32,32,91,32,32,]),'-':([32,34,36,39,58,82,83,84,85,],[-36,57,-31,-25,-35,-29,-23,-24,-37,]),',':([21,24,27,48,50,53,72,91,],[47,49,52,71,73,75,90,97,]),'/':([32,36,39,58,82,85,],[-36,-31,63,-35,-29,-37,]),':':([12,],[26,]),'$end':([2,3,7,8,9,10,13,14,19,23,26,31,32,51,58,65,70,76,85,89,98,103,105,108,110,],[-1,-10,-9,-7,0,-2,-8,-6,-27,-3,-4,-26,-36,-5,-35,-11,-14,-12,-37,-13,-17,-16,-22,-21,-15,]),'RELOP':([32,34,36,39,45,58,61,79,80,82,83,84,85,],[-36,-20,-31,-25,68,-35,68,-18,-19,-29,-23,-24,-37,]),'[':([20,29,38,46,47,52,55,56,57,59,62,63,66,67,68,71,75,78,90,97,107,],[41,41,41,41,41,74,41,41,41,41,41,41,41,41,41,41,93,41,96,102,41,]),']':([64,92,99,101,106,],[85,98,103,105,108,]),'ID':([0,3,4,7,8,10,13,14,17,18,19,26,31,32,41,51,58,65,70,74,76,85,89,93,96,98,102,103,105,108,110,],[12,-10,19,-9,-7,12,-8,-6,12,31,-27,-4,-26,-36,64,-5,-35,-11,-14,92,-12,-37,-13,99,101,-17,106,-16,-22,-21,-15,]),'AND':([32,34,35,36,39,40,43,44,58,69,79,80,81,82,83,84,85,88,],[-36,-20,-43,-31,-25,-42,67,-41,-35,-40,-18,-19,-44,-29,-23,-24,-37,-45,]),'INSTR_BRANCH':([0,3,7,8,10,13,14,17,19,26,31,32,51,58,65,70,76,85,89,98,103,105,108,110,],[4,-10,-9,-7,4,-8,-6,4,-27,4,-26,-36,-5,-35,-11,-14,-12,-37,-13,-17,-16,-22,-21,-15,]),'ASSUME':([0,3,7,8,10,13,14,17,19,26,31,32,51,58,65,70,76,85,89,98,103,105,108,110,],[16,-10,-9,-7,16,-8,-6,16,-27,16,-26,-36,-5,-35,-11,-14,-12,-37,-13,-17,-16,-22,-21,-15,]),'NOT':([20,29,38,55,59,66,67,107,],[46,46,46,46,46,46,46,46,]),'{':([1,3,7,8,10,13,14,19,23,26,30,31,32,51,58,65,70,76,85,89,98,103,105,108,110,],[17,-10,-9,-7,-2,-8,-6,-27,-3,-4,55,-26,-36,-5,-35,-11,-14,-12,-37,-13,-17,-16,-22,-21,-15,]),'}':([32,33,34,35,36,39,40,43,44,58,69,77,79,80,81,82,83,84,85,86,87,88,94,],[-36,-33,-20,-43,-31,-25,-42,-38,-41,-35,-40,94,-18,-19,-44,-29,-23,-24,-37,-34,-39,-45,100,]),'OR':([32,33,34,35,36,39,40,42,43,44,54,58,60,69,77,79,80,81,82,83,84,85,86,87,88,109,],[-36,-33,-20,-43,-31,-25,-42,66,-38,-41,66,-35,66,-40,66,-18,-19,-44,-29,-23,-24,-37,-34,-39,-45,66,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statements':([0,10,17,],[2,23,30,]),'exp':([20,29,38,46,55,59,66,67,68,78,107,],[45,45,61,45,45,61,45,45,88,95,45,]),'bexp':([20,29,38,55,59,107,],[42,54,60,77,60,109,]),'instr_processing':([0,10,17,26,],[8,8,8,8,]),'bterm':([20,29,38,55,59,66,67,107,],[33,33,33,33,33,86,87,33,]),'instruction':([0,10,17,26,],[14,14,14,51,]),'bfactor':([20,29,38,46,55,59,66,67,107,],[44,44,44,69,44,44,44,44,44,]),'instr_branch':([0,10,17,26,],[3,3,3,3,]),'texp':([20,29,38,46,55,56,57,59,66,67,68,78,107,],[34,34,34,34,34,79,80,34,34,34,34,34,34,]),'instr_memory':([0,10,17,26,],[13,13,13,13,]),'nfactor':([20,29,38,55,59,66,67,107,],[43,43,43,43,43,43,43,43,]),'program':([0,],[9,]),'statement':([0,10,17,],[10,10,10,]),'factor':([20,29,38,46,55,56,57,59,62,63,66,67,68,78,107,],[39,39,39,39,39,39,39,39,83,84,39,39,39,39,39,]),'operand':([20,29,38,46,47,55,56,57,59,62,63,66,67,68,71,78,107,],[36,36,36,36,70,36,36,36,36,36,36,36,36,36,89,36,36,]),'instr_swp':([0,10,17,26,],[7,7,7,7,]),'brelation':([20,29,38,46,55,59,66,67,107,],[40,40,40,40,40,40,40,40,40,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements','program',1,'p_program_statements','parser.py',38),
  ('statements -> statement','statements',1,'p_statements','parser.py',44),
  ('statements -> statement statements','statements',2,'p_statements','parser.py',45),
  ('statement -> ID :','statement',2,'p_statement','parser.py',54),
  ('statement -> ID : instruction','statement',3,'p_statement','parser.py',55),
  ('statement -> instruction','statement',1,'p_statement','parser.py',56),
  ('instruction -> instr_processing','instruction',1,'p_instruction','parser.py',66),
  ('instruction -> instr_memory','instruction',1,'p_instruction','parser.py',67),
  ('instruction -> instr_swp','instruction',1,'p_instruction','parser.py',68),
  ('instruction -> instr_branch','instruction',1,'p_instruction','parser.py',69),
  ('instruction -> ASSERT ( bexp )','instruction',4,'p_instruction_assert','parser.py',67),
  ('instruction -> ASSUME ( bexp )','instruction',4,'p_instruction_assume','parser.py',72),
  ('instr_processing -> INSTR1 COND REGISTER , operand','instr_processing',5,'p_instr_processing','parser.py',74),
  ('instr_processing -> INSTR1 REGISTER , operand','instr_processing',4,'p_instr_processing','parser.py',75),
  ('instruction -> DO { statements { bexp } } WHILE ( bexp )','instruction',11,'p_instruction_do','parser.py',77),
  ('instr_memory -> INSTR2 COND REGISTER , [ ID ]','instr_memory',7,'p_instr_memory','parser.py',83),
  ('instr_memory -> INSTR2 REGISTER , [ ID ]','instr_memory',6,'p_instr_memory','parser.py',84),
  ('exp -> texp + texp','exp',3,'p_exp','parser.py',85),
  ('exp -> texp - texp','exp',3,'p_exp','parser.py',86),
  ('exp -> texp','exp',1,'p_exp','parser.py',87),
  ('instr_swp -> INSTR_SWP COND REGISTER , REGISTER , [ ID ]','instr_swp',9,'p_instr_swp','parser.py',92),
  ('instr_swp -> INSTR_SWP REGISTER , REGISTER , [ ID ]','instr_swp',8,'p_instr_swp','parser.py',93),
  ('texp -> factor * factor','texp',3,'p_texp','parser.py',98),
  ('texp -> factor / factor','texp',3,'p_texp','parser.py',99),
  ('texp -> factor','texp',1,'p_texp','parser.py',100),
  ('instr_branch -> INSTR_BRANCH COND ID','instr_branch',3,'p_instr_branch','parser.py',100),
  ('instr_branch -> INSTR_BRANCH ID','instr_branch',2,'p_instr_branch','parser.py',101),
  ('operands -> # NUMBER','operands',2,'p_operands_operand','parser.py',110),
  ('factor -> ( exp )','factor',3,'p_factor_exp','parser.py',111),
  ('operands -> REGISTER','operands',1,'p_operands_register','parser.py',113),
  ('factor -> operand','factor',1,'p_factor_operand','parser.py',116),
  ('operands -> operand , operands','operands',3,'p_operands_operand_operands','parser.py',119),
  ('bexp -> bterm','bexp',1,'p_bexp','parser.py',122),
  ('bexp -> bexp OR bterm','bexp',3,'p_bexp','parser.py',123),
  ('operand -> # NUMBER','operand',2,'p_operand_number','parser.py',123),
  ('operand -> REGISTER','operand',1,'p_operand_register','parser.py',127),
  ('operand -> [ ID ]','operand',3,'p_operand_location','parser.py',131),
  ('bterm -> nfactor','bterm',1,'p_bterm_nfactor','parser.py',131),
  ('bterm -> nfactor AND bterm','bterm',3,'p_bterm_nfactor_and','parser.py',134),
  ('nfactor -> NOT bfactor','nfactor',2,'p_nfactor_not','parser.py',137),
  ('nfactor -> bfactor','nfactor',1,'p_nfactor_bfactor','parser.py',140),
  ('bfactor -> brelation','bfactor',1,'p_bfactor_brelation','parser.py',145),
  ('bfactor -> BLIT','bfactor',1,'p_bfactor','parser.py',151),
  ('bfactor -> ( bexp )','bfactor',3,'p_bfactor','parser.py',152),
  ('brelation -> exp RELOP exp','brelation',3,'p_brelation','parser.py',165),
]
