
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'A1393124A26F53155EB9D170262BBB43'
    
_lr_action_items = {'DO':([0,3,7,9,11,15,16,17,20,22,30,36,37,39,41,45,58,66,67,74,79,87,90,91,93,94,95,96,100,101,104,112,118,120,124,125,128,129,],[1,-10,-9,-7,1,-8,-11,-6,1,-24,1,-23,-35,-27,-38,-32,-5,-34,-39,-12,-14,-15,-25,-26,-37,-30,-31,-36,-13,-22,1,-18,-17,-21,-20,1,-16,-19,]),'*':([37,41,45,66,67,93,96,],[-35,-38,71,-34,-39,-37,-36,]),'NUMBER':([42,],[66,]),'ASSERT':([0,3,7,9,11,15,16,17,20,22,30,36,37,39,41,45,58,66,67,74,79,87,90,91,93,94,95,96,100,101,104,112,118,120,124,125,128,129,],[5,-10,-9,-7,5,-8,-11,-6,5,-24,5,-23,-35,-27,-38,-32,-5,-34,-39,-12,-14,-15,-25,-26,-37,-30,-31,-36,-13,-22,5,-18,-17,-21,-20,5,-16,-19,]),'INSTR1':([0,3,7,9,11,15,16,17,20,22,30,36,37,39,41,45,58,66,67,74,79,87,90,91,93,94,95,96,100,101,104,112,118,120,124,125,128,129,],[6,-10,-9,-7,6,-8,-11,-6,6,-24,6,-23,-35,-27,-38,-32,-5,-34,-39,-12,-14,-15,-25,-26,-37,-30,-31,-36,-13,-22,6,-18,-17,-21,-20,6,-16,-19,]),'INSTR2':([0,3,7,9,11,15,16,17,20,22,30,36,37,39,41,45,58,66,67,74,79,87,90,91,93,94,95,96,100,101,104,112,118,120,124,125,128,129,],[18,-10,-9,-7,18,-8,-11,-6,18,-24,18,-23,-35,-27,-38,-32,-5,-34,-39,-12,-14,-15,-25,-26,-37,-30,-31,-36,-13,-22,18,-18,-17,-21,-20,18,-16,-19,]),'COND':([4,6,12,18,],[21,25,29,33,]),'BLIT':([23,31,34,44,52,63,68,75,76,123,],[40,40,40,40,40,40,40,40,40,40,]),'WHILE':([114,],[119,]),'#':([23,31,34,44,52,53,63,64,65,68,71,72,75,76,77,80,81,89,123,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'INSTR_SWP':([0,3,7,9,11,15,16,17,20,22,30,36,37,39,41,45,58,66,67,74,79,87,90,91,93,94,95,96,100,101,104,112,118,120,124,125,128,129,],[12,-10,-9,-7,12,-8,-11,-6,12,-24,12,-23,-35,-27,-38,-32,-5,-34,-39,-12,-14,-15,-25,-26,-37,-30,-31,-36,-13,-22,12,-18,-17,-21,-20,12,-16,-19,]),'$':([0,3,7,9,11,15,16,17,20,22,23,30,31,34,36,37,39,41,44,45,52,58,63,64,65,66,67,68,71,72,74,75,76,77,79,81,87,89,90,91,93,94,95,96,100,101,104,112,118,120,123,124,125,128,129,],[8,-10,-9,-7,8,-8,-11,-6,8,-24,43,8,43,43,-23,-35,-27,-38,43,-32,43,-5,43,43,43,-34,-39,43,43,43,-12,43,43,43,-14,43,-15,43,-25,-26,-37,-30,-31,-36,-13,-22,8,-18,-17,-21,43,-20,8,-16,-19,]),'ASSUME':([0,3,7,9,11,15,16,17,20,22,30,36,37,39,41,45,58,66,67,74,79,87,90,91,93,94,95,96,100,101,104,112,118,120,124,125,128,129,],[19,-10,-9,-7,19,-8,-11,-6,19,-24,19,-23,-35,-27,-38,-32,-5,-34,-39,-12,-14,-15,-25,-26,-37,-30,-31,-36,-13,-22,19,-18,-17,-21,-20,19,-16,-19,]),'(':([5,14,19,23,31,34,44,52,63,64,65,68,71,72,75,76,77,81,89,119,123,],[23,31,34,44,44,44,68,44,44,89,89,68,89,89,44,44,89,89,89,123,44,]),'+':([37,39,41,45,66,67,93,94,95,96,],[-35,64,-38,-32,-34,-39,-37,-30,-31,-36,]),'REGISTER':([6,12,18,23,25,29,31,33,34,44,52,53,56,63,64,65,68,71,72,75,76,77,80,81,83,89,123,],[24,28,32,37,54,57,37,61,37,37,37,37,82,37,37,37,37,37,37,37,37,37,37,37,103,37,37,]),'-':([37,39,41,45,66,67,93,94,95,96,],[-35,65,-38,-32,-34,-39,-37,-30,-31,-36,]),',':([24,28,32,54,57,61,82,103,],[53,56,60,80,83,86,102,110,]),'/':([37,41,45,66,67,93,96,],[-35,-38,72,-34,-39,-37,-36,]),':':([13,26,],[30,55,]),'$end':([2,3,7,9,10,11,15,16,17,22,27,30,36,37,39,41,45,58,66,67,74,79,87,90,91,93,94,95,96,100,101,112,118,120,124,128,129,],[-1,-10,-9,-7,0,-2,-8,-11,-6,-24,-3,-4,-23,-35,-27,-38,-32,-5,-34,-39,-12,-14,-15,-25,-26,-37,-30,-31,-36,-13,-22,-18,-17,-21,-20,-16,-19,]),'RELOP':([37,39,41,45,51,55,66,67,70,90,91,93,94,95,96,],[-35,-27,-38,-32,77,81,-34,-39,77,-25,-26,-37,-30,-31,-36,]),'ELSE':([117,],[122,]),'[':([23,31,34,44,52,53,60,63,64,65,68,71,72,75,76,77,80,81,86,89,102,110,123,],[47,47,47,47,47,47,85,47,47,47,47,47,47,47,47,47,47,47,106,47,109,116,47,]),']':([73,105,113,115,121,],[96,112,118,120,124,]),'ID':([0,3,4,7,8,9,11,15,16,17,20,21,22,30,36,37,39,41,43,45,47,58,66,67,74,79,85,87,90,91,93,94,95,96,100,101,104,106,109,112,116,118,120,124,125,128,129,],[13,-10,22,-9,26,-7,13,-8,-11,-6,13,36,-24,-4,-23,-35,-27,-38,67,-32,73,-5,-34,-39,-12,-14,105,-15,-25,-26,-37,-30,-31,-36,-13,-22,13,113,115,-18,121,-17,-21,-20,13,-16,-19,]),'IF':([0,3,7,9,11,15,16,17,20,22,30,36,37,39,41,45,58,66,67,74,79,87,90,91,93,94,95,96,100,101,104,112,118,120,124,125,128,129,],[14,-10,-9,-7,14,-8,-11,-6,14,-24,14,-23,-35,-27,-38,-32,-5,-34,-39,-12,-14,-15,-25,-26,-37,-30,-31,-36,-13,-22,14,-18,-17,-21,-20,14,-16,-19,]),'AND':([37,39,40,41,45,46,49,50,66,67,78,90,91,92,93,94,95,96,99,],[-35,-27,-47,-38,-32,-46,76,-45,-34,-39,-44,-25,-26,-48,-37,-30,-31,-36,-49,]),'NOP':([0,3,7,9,11,15,16,17,20,22,30,36,37,39,41,45,58,66,67,74,79,87,90,91,93,94,95,96,100,101,104,112,118,120,124,125,128,129,],[16,-10,-9,-7,16,-8,-11,-6,16,-24,16,-23,-35,-27,-38,-32,-5,-34,-39,-12,-14,-15,-25,-26,-37,-30,-31,-36,-13,-22,16,-18,-17,-21,-20,16,-16,-19,]),'INSTR_BRANCH':([0,3,7,9,11,15,16,17,20,22,30,36,37,39,41,45,58,66,67,74,79,87,90,91,93,94,95,96,100,101,104,112,118,120,124,125,128,129,],[4,-10,-9,-7,4,-8,-11,-6,4,-24,4,-23,-35,-27,-38,-32,-5,-34,-39,-12,-14,-15,-25,-26,-37,-30,-31,-36,-13,-22,4,-18,-17,-21,-20,4,-16,-19,]),')':([37,38,39,40,41,45,46,48,49,50,59,62,66,67,69,70,78,90,91,92,93,94,95,96,97,98,99,108,126,],[-35,-40,-27,-47,-38,-32,-46,74,-42,-45,84,87,-34,-39,92,93,-44,-25,-26,-48,-37,-30,-31,-36,-41,-43,-49,93,128,]),'NOT':([23,31,34,44,63,68,75,76,123,],[52,52,52,52,52,52,52,52,52,]),'{':([1,3,7,9,11,15,16,17,22,27,30,35,36,37,39,41,45,58,66,67,74,79,84,87,90,91,93,94,95,96,100,101,112,118,120,122,124,128,129,],[20,-10,-9,-7,-2,-8,-11,-6,-24,-3,-4,63,-23,-35,-27,-38,-32,-5,-34,-39,-12,-14,104,-15,-25,-26,-37,-30,-31,-36,-13,-22,-18,-17,-21,125,-20,-16,-19,]),'}':([3,7,9,11,15,16,17,22,27,30,36,37,38,39,40,41,45,46,49,50,58,66,67,74,78,79,87,88,90,91,92,93,94,95,96,97,98,99,100,101,107,111,112,118,120,124,127,128,129,],[-10,-9,-7,-2,-8,-11,-6,-24,-3,-4,-23,-35,-40,-27,-47,-38,-32,-46,-42,-45,-5,-34,-39,-12,-44,-14,-15,107,-25,-26,-48,-37,-30,-31,-36,-41,-43,-49,-13,-22,114,117,-18,-17,-21,-20,129,-16,-19,]),'OR':([37,38,39,40,41,45,46,48,49,50,59,62,66,67,69,78,88,90,91,92,93,94,95,96,97,98,99,126,],[-35,-40,-27,-47,-38,-32,-46,75,-42,-45,75,75,-34,-39,75,-44,75,-25,-26,-48,-37,-30,-31,-36,-41,-43,-49,75,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statements':([0,11,20,104,125,],[2,27,35,111,127,]),'exp':([23,31,34,44,52,63,68,75,76,77,81,89,123,],[51,51,51,70,51,51,70,51,51,99,101,108,51,]),'bexp':([23,31,34,44,63,68,123,],[48,59,62,69,88,69,126,]),'instr_processing':([0,11,20,30,104,125,],[9,9,9,9,9,9,]),'bterm':([23,31,34,44,63,68,75,76,123,],[38,38,38,38,38,38,97,98,38,]),'instruction':([0,11,20,30,104,125,],[17,17,17,58,17,17,]),'bfactor':([23,31,34,44,52,63,68,75,76,123,],[50,50,50,50,78,50,50,50,50,50,]),'instr_branch':([0,11,20,30,104,125,],[3,3,3,3,3,3,]),'texp':([23,31,34,44,52,63,64,65,68,75,76,77,81,89,123,],[39,39,39,39,39,39,90,91,39,39,39,39,39,39,39,]),'instr_memory':([0,11,20,30,104,125,],[15,15,15,15,15,15,]),'nfactor':([23,31,34,44,63,68,75,76,123,],[49,49,49,49,49,49,49,49,49,]),'program':([0,],[10,]),'statement':([0,11,20,104,125,],[11,11,11,11,11,]),'factor':([23,31,34,44,52,63,64,65,68,71,72,75,76,77,81,89,123,],[45,45,45,45,45,45,45,45,45,94,95,45,45,45,45,45,45,]),'operand':([23,31,34,44,52,53,63,64,65,68,71,72,75,76,77,80,81,89,123,],[41,41,41,41,41,79,41,41,41,41,41,41,41,41,41,100,41,41,41,]),'instr_swp':([0,11,20,30,104,125,],[7,7,7,7,7,7,]),'brelation':([23,31,34,44,52,63,68,75,76,123,],[46,46,46,46,46,46,46,46,46,46,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements','program',1,'p_program_statements','parser.py',38),
  ('statements -> statement','statements',1,'p_statements','parser.py',44),
  ('statements -> statement statements','statements',2,'p_statements','parser.py',45),
  ('statement -> ID :','statement',2,'p_statement','parser.py',54),
  ('statement -> ID : instruction','statement',3,'p_statement','parser.py',55),
  ('statement -> instruction','statement',1,'p_statement','parser.py',56),
  ('instruction -> instr_processing','instruction',1,'p_instruction','parser.py',66),
  ('instruction -> instr_memory','instruction',1,'p_instruction','parser.py',67),
  ('instruction -> instr_swp','instruction',1,'p_instruction','parser.py',68),
  ('instruction -> instr_branch','instruction',1,'p_instruction','parser.py',69),
  ('instruction -> NOP','instruction',1,'p_instruction_nop','parser.py',67),
  ('instruction -> ASSERT ( bexp )','instruction',4,'p_instruction_assert','parser.py',73),
  ('instr_processing -> INSTR1 COND REGISTER , operand','instr_processing',5,'p_instr_processing','parser.py',74),
  ('instr_processing -> INSTR1 REGISTER , operand','instr_processing',4,'p_instr_processing','parser.py',75),
  ('instruction -> ASSUME ( bexp )','instruction',4,'p_instruction_assume','parser.py',78),
  ('instruction -> DO { statements { bexp } } WHILE ( bexp )','instruction',11,'p_instruction_do','parser.py',83),
  ('instr_memory -> INSTR2 COND REGISTER , [ ID ]','instr_memory',7,'p_instr_memory','parser.py',83),
  ('instr_memory -> INSTR2 REGISTER , [ ID ]','instr_memory',6,'p_instr_memory','parser.py',84),
  ('instruction -> IF ( bexp ) { statements } ELSE { statements }','instruction',11,'p_instruction_if','parser.py',90),
  ('instr_swp -> INSTR_SWP COND REGISTER , REGISTER , [ ID ]','instr_swp',9,'p_instr_swp','parser.py',92),
  ('instr_swp -> INSTR_SWP REGISTER , REGISTER , [ ID ]','instr_swp',8,'p_instr_swp','parser.py',93),
  ('instruction -> $ ID : RELOP exp','instruction',5,'p_instruction_assn','parser.py',96),
  ('instr_branch -> INSTR_BRANCH COND ID','instr_branch',3,'p_instr_branch','parser.py',100),
  ('instr_branch -> INSTR_BRANCH ID','instr_branch',2,'p_instr_branch','parser.py',101),
  ('exp -> texp + texp','exp',3,'p_exp','parser.py',105),
  ('exp -> texp - texp','exp',3,'p_exp','parser.py',106),
  ('exp -> texp','exp',1,'p_exp','parser.py',107),
  ('operands -> # NUMBER','operands',2,'p_operands_operand','parser.py',110),
  ('operands -> REGISTER','operands',1,'p_operands_register','parser.py',113),
  ('texp -> factor * factor','texp',3,'p_texp','parser.py',118),
  ('texp -> factor / factor','texp',3,'p_texp','parser.py',119),
  ('texp -> factor','texp',1,'p_texp','parser.py',120),
  ('operands -> operand , operands','operands',3,'p_operands_operand_operands','parser.py',119),
  ('operand -> # NUMBER','operand',2,'p_operand_number','parser.py',123),
  ('operand -> REGISTER','operand',1,'p_operand_register','parser.py',127),
  ('operand -> [ ID ]','operand',3,'p_operand_location','parser.py',131),
  ('factor -> ( exp )','factor',3,'p_factor_exp','parser.py',131),
  ('factor -> operand','factor',1,'p_factor_operand','parser.py',136),
  ('factor -> $ ID','factor',2,'p_factor_aux','parser.py',142),
  ('bexp -> bterm','bexp',1,'p_bexp','parser.py',148),
  ('bexp -> bexp OR bterm','bexp',3,'p_bexp','parser.py',149),
  ('bterm -> nfactor','bterm',1,'p_bterm_nfactor','parser.py',157),
  ('bterm -> nfactor AND bterm','bterm',3,'p_bterm_nfactor_and','parser.py',160),
  ('nfactor -> NOT bfactor','nfactor',2,'p_nfactor_not','parser.py',163),
  ('nfactor -> bfactor','nfactor',1,'p_nfactor_bfactor','parser.py',166),
  ('bfactor -> brelation','bfactor',1,'p_bfactor_brelation','parser.py',171),
  ('bfactor -> BLIT','bfactor',1,'p_bfactor','parser.py',177),
  ('bfactor -> ( bexp )','bfactor',3,'p_bfactor','parser.py',178),
  ('brelation -> exp RELOP exp','brelation',3,'p_brelation','parser.py',191),
]
